import json
import websocket
import threading
import time
from logs.log_settings import logger

# URL WebSocket Bybit
BYBIT_WS_URL = "wss://stream.bybit.com/v5/public/spot"

# –ú–æ–Ω–µ—Ç—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ (–Ω—É–∂–Ω–æ `orderbook.1.<pair>`)
PAIRS = ['BTCUSDT', 'ETHUSDT', 'SOLUSDT', 'XRPUSDT', 'DOGEUSDT', 'SUIUSDT', 'LTCUSDT', 'IPUSDT', 'ADAUSDT', 'TONUSDT']
SUBSCRIPTIONS = {"op": "subscribe", "args": [f"orderbook.1.{pair}" for pair in PAIRS]}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–µ–Ω
bybit_prices = {
    'BTCUSDT': {},
    'ETHUSDT': {},
    'SOLUSDT': {},
    'XRPUSDT': {},
    'DOGEUSDT': {},
    'SUIUSDT': {},
    'LTCUSDT': {},
    'IPUSDT': {},
    'ADAUSDT': {},
    'TONUSDT': {}
}

# –ö–ª–∞—Å—Å WebSocket –¥–ª—è Bybit
class BybitWebSocket:
    def __init__(self, prices):
        self.ws = None
        self.prices = prices
        self.reconnect = True

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket
    def on_open(self, ws):
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket Bybit")
        ws.send(json.dumps(SUBSCRIPTIONS))
        print("üì° –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:", SUBSCRIPTIONS)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    def on_message(self, ws, message):
        try:
            data = json.loads(message)
            if "success" in data and data["success"]:
                print(f"üîî –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–∞: {data}")
                return

            if "topic" in data and "orderbook" in data["topic"]:
                orderbook_data = data["data"]
                symbol = orderbook_data["s"]
                bids = orderbook_data.get("b", [])
                asks = orderbook_data.get("a", [])

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –ª—É—á—à–∏–µ —Ü–µ–Ω—ã
                if bids and asks:
                    bid_price = float(bids[0][0])  # –õ—É—á—à–∞—è —Ü–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏
                    ask_price = float(asks[0][0])  # –õ—É—á—à–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏

                    if symbol in bybit_prices:
                        self.prices[symbol]["bybit"] = {"bid": bid_price, "ask": ask_price}

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö Bybit: {e}")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    def on_error(self, ws, error):
        print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket Bybit: {error}")
        self.clear_prices()  # –£–¥–∞–ª—è–µ–º —Ü–µ–Ω—ã

    # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    def on_close(self, ws, close_status_code, close_msg):
        logger.warning(f'BYBIT WS: {ws}, Close_status_code: {close_status_code}, Close_msg: {close_msg}')
        if self.reconnect:
            logger.error(print("‚ùå WebSocket Bybit –∑–∞–∫—Ä—ã—Ç"))
            logger.info("üîÑ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket Bybit —á–µ—Ä–µ–∑ 5 —Å–µ–∫...")
            time.sleep(5)
            self.start()  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è

    def clear_prices(self):
        """–£–¥–∞–ª—è–µ—Ç —Ü–µ–Ω—ã bybit –∏–∑ —Å–ª–æ–≤–∞—Ä—è –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏."""
        for symbol in self.prices:
            if "bybit" in self.prices[symbol]:
                del self.prices[symbol]["bybit"]

    # –ó–∞–ø—É—Å–∫ WebSocket —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
    def start(self):
        while True:
            try:
                self.ws = websocket.WebSocketApp(
                    BYBIT_WS_URL,
                    on_open=self.on_open,
                    on_message=self.on_message,
                    on_error=self.on_error,
                    on_close=self.on_close,
                )
                self.ws.run_forever()
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket Bybit (–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫): {e}")
            time.sleep(5)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º


if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    def run_bybit_websocket():
        bybit_ws = BybitWebSocket(bybit_prices)  # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç WebSocket
        bybit_ws.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º

    bybit_thread = threading.Thread(target=run_bybit_websocket, daemon=True)
    bybit_thread.start()

    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã–º
    while True:
        print(bybit_prices)
        time.sleep(1)
