import json
import websocket
import threading
import time

# URL WebSocket OKX
OKX_WS_URL = "wss://ws.okx.com:8443/ws/v5/public"

# –ú–æ–Ω–µ—Ç—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
PAIRS = ['BTC-USDT', 'ETH-USDT', 'SOL-USDT', 'XRP-USDT', 'DOGE-USDT', 'SUI-USDT', 'LTC-USDT', 'IP-USDT', 'ADA-USDT',
         'TON-USDT']
SUBSCRIPTIONS = [{"op": "subscribe", "args": [{"channel": "tickers", "instId": pair}]} for pair in PAIRS]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–µ–Ω
okx_prices = {
    'BTCUSDT': {},
    'ETHUSDT': {},
    'SOLUSDT': {},
    'XRPUSDT': {},
    'DOGEUSDT': {},
    'SUIUSDT': {},
    'LTCUSDT': {},
    'IPUSDT': {},
    'ADAUSDT': {},
    'TONUSDT': {}
}


# –ö–ª–∞—Å—Å WebSocket –¥–ª—è OKX
class OKXWebSocket:
    def __init__(self, prices):
        self.ws = None
        self.prices = prices

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket
    def on_open(self, ws):
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket OKX")
        for sub in SUBSCRIPTIONS:
            ws.send(json.dumps(sub))
            print("üì° –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:", sub)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    def on_message(self, ws, message):
        try:
            data = json.loads(message)
            if "event" in data and data["event"] == "subscribe":
                print(f"üîî –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–∞: {data}")
                return

            if "arg" in data and "data" in data:
                ticker_data = data["data"][0]
                symbol = data["arg"]["instId"].replace('-', '')
                bid_price = float(ticker_data["bidPx"])
                ask_price = float(ticker_data["askPx"])
                if symbol in okx_prices:
                    self.prices[symbol]["okx"] = {"bid": bid_price, "ask": ask_price}

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö OKX: {e}")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    def on_error(self, ws, error):
        print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket OKX: {error}")

    # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    def on_close(self, ws, close_status_code, close_msg):
        print("‚ùå WebSocket OKX –∑–∞–∫—Ä—ã—Ç")

    # –ó–∞–ø—É—Å–∫ WebSocket —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
    def start(self):
        while True:
            try:
                self.ws = websocket.WebSocketApp(
                    OKX_WS_URL,
                    on_open=self.on_open,
                    on_message=self.on_message,
                    on_error=self.on_error,
                    on_close=self.on_close,
                )
                self.ws.run_forever()
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket OKX (–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫): {e}")
            time.sleep(5)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º


if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    def run_okx_websocket():
        okx_ws = OKXWebSocket(okx_prices)  # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç WebSocket
        okx_ws.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º

    okx_thread = threading.Thread(target=run_okx_websocket, daemon=True)
    okx_thread.start()

    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã–º
    while True:
        print(okx_prices)
        time.sleep(1)
