import json
import websocket
import threading
import time
import gzip
from logs.logging import logger

# URL WebSocket HTX
HTX_WS_URL = "wss://api.huobi.pro/ws"

# –ú–æ–Ω–µ—Ç—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ (—Ñ–æ—Ä–º–∞—Ç HTX: `market.<pair>.depth.step0`)
PAIRS = ['btcusdt', 'ethusdt', 'solusdt', 'xrpusdt', 'dogeusdt', 'suiusdt', 'ltcusdt', 'tonusdt', 'adausdt',
         'ipusdt'] # ipusdt –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
SUBSCRIPTIONS = [{"sub": f"market.{pair}.depth.step0", "id": pair} for pair in PAIRS]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–µ–Ω
htx_prices = {
    'BTCUSDT': {},
    'ETHUSDT': {},
    'SOLUSDT': {},
    'XRPUSDT': {},
    'DOGEUSDT': {},
    'SUIUSDT': {},
    'LTCUSDT': {},
    'IPUSDT': {},
    'ADAUSDT': {},
    'TONUSDT': {}
}


# –ö–ª–∞—Å—Å WebSocket –¥–ª—è HTX
class HTXWebSocket:
    def __init__(self, prices):
        self.ws = None
        self.prices = prices
        self.reconnect = True

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket
    def on_open(self, ws):
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket HTX")
        for sub in SUBSCRIPTIONS:
            ws.send(json.dumps(sub))
            print("üì° –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:", sub)

    # –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ Gzip
    def decode_message(self, message):
        return gzip.decompress(message).decode("utf-8")

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    def on_message(self, ws, message):
        try:
            utf8_data = self.decode_message(message)
            data = json.loads(utf8_data)

            if "ping" in data:  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –ø–∏–Ω–≥
                ws.send(json.dumps({"pong": data["ping"]}))

            if "tick" in data and "bids" in data["tick"] and "asks" in data["tick"]:
                symbol = data["ch"].split(".")[1].upper()  # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–∏–º–≤–æ–ª –∏–∑ `ch`
                bid_price = float(data["tick"]["bids"][0][0])  # –õ—É—á—à–∞—è —Ü–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏
                ask_price = float(data["tick"]["asks"][0][0])  # –õ—É—á—à–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏
                if symbol in htx_prices:
                    self.prices[symbol]["htx"] = {"bid": bid_price, "ask": ask_price}

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö HTX: {e}")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    def on_error(self, ws, error):
        print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket HTX: {error}")
        self.clear_prices()  # –£–¥–∞–ª—è–µ–º —Ü–µ–Ω—ã

    # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    def on_close(self, ws, close_status_code, close_msg):
        logger.warning(f'HTX WS: {ws}, Close_status_code: {close_status_code}, Close_msg: {close_msg}')
        if self.reconnect:
            logger.error(f"‚ö†Ô∏è WebSocket HTX –∑–∞–∫—Ä—ã—Ç")
            logger.info("üîÑ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket HTX —á–µ—Ä–µ–∑ 5 —Å–µ–∫...")
            time.sleep(5)
            self.start()  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è

    def clear_prices(self):
        """–£–¥–∞–ª—è–µ—Ç —Ü–µ–Ω—ã HTX –∏–∑ —Å–ª–æ–≤–∞—Ä—è –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏."""
        for symbol in self.prices:
            if "htx" in self.prices[symbol]:
                del self.prices[symbol]["htx"]

    # –ó–∞–ø—É—Å–∫ WebSocket —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º
    def start(self):
        while True:
            try:
                self.ws = websocket.WebSocketApp(
                    HTX_WS_URL,
                    on_open=self.on_open,
                    on_message=self.on_message,
                    on_error=self.on_error,
                    on_close=self.on_close,
                )
                self.ws.run_forever()
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket HTX (–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫): {e}")
            time.sleep(5)  # –ñ–¥—ë–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º


if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    def run_htx_websocket():
        htx_ws = HTXWebSocket(htx_prices)  # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç WebSocket
        htx_ws.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º

    htx_thread = threading.Thread(target=run_htx_websocket, daemon=True)
    htx_thread.start()

    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã–º
    while True:
        print(htx_prices)
        time.sleep(1)
